<project default="dist" name="FontBox" basedir=".">

    <!-- Use the following file to alter any of the below properties -->
    <property file="build.properties" />
    <property environment="env"/>

    <property name="build.compiler" value="modern" />
    <property name="src.dir" value="src" />
    <property name="dest.dir" value="classes" />
    <property name="bin.dir" value="bin" />
    <property name="website.dir" value="website" />
    <property name="website.build.dir" value="${website.dir}/build/site" />
    <property name="docs.dir" value="${website.dir}/build/site/javadoc" />
    <property name="lib.dir" value="lib" />
    <property name="licenses.dir" value="licenses" />
    <property name="dist.dir" value="dist" />
    <property name="resources.dir" value="Resources" />
    <property name="checkstyle.config" value="fontbox-checkstyle.xml" />

    <property name="project.name" value="FontBox"/>
    <property name="project.version" value="0.1.0" />

    <property name="checkstyle.jar.dir" value="lib" />
    <property name="checkstyle.jar" value="${checkstyle.jar.dir}/checkstyle-all-*.jar" />

    <property name="junit.jar.dir" value="lib"/>
    <property name="junit.jar" value="${junit.jar.dir}/junit.jar" />
    
    <!--.NET properties -->
    <property name="ikvm.dir" value="."/>
    <property name="ikvmc" value="${ikvm.dir}/bin/ikvmc.exe"/>

    <path id="build.classpath">
        <fileset dir="lib" >
            <include name="**/*.jar" />
        	<exclude name="**/${project.name}*.jar" />
        </fileset>
        <pathelement path="${dest.dir}" />
        <pathelement path="." />
    </path>

    <target name="clean" description="Remove all generated files">
    	<delete failonerror="false">
	        <fileset dir="${dest.dir}"/>
	        <fileset dir="${docs.dir}"/>
	        <fileset dir="${bin.dir}"/>
	    	<fileset dir="${lib.dir}">
	    		<include name="${project.name}*.jar" />
	    	</fileset>
	        <fileset dir="." file="checkstyle.cache" />
        </delete>
    </target>
    
    <target name="fontbox.init">
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${dest.dir}"/>
        <mkdir dir="${docs.dir}" />
        <mkdir dir="${dist.dir}" />
        <mkdir dir="${bin.dir}" />
    </target>

    <target name="compile" depends="fontbox.init" description="Compile Java source files">
        <!-- required encoding flag to be able to build using ibm-jdk on redhat ES-->
        <javac srcdir="${src.dir}" destdir="${dest.dir}" debug="on" classpathref="build.classpath" deprecation="on" encoding="ISO-8859-1"/>
    </target>

    <target name="junit" depends="clean,compile" description="run junit tests">
        <junit printsummary="off" fork="on" dir=".">
            <classpath>
                <pathelement path="${dest.dir}"/>
                <pathelement path="." />
            </classpath>
            <formatter usefile="false" type="plain" />
            <test name="test.fontbox.TestAll" />
        </junit>
    </target>

    <target name="checkstyle" depends="compile">
        <!--
        This doesn't work when run from netbeans for some reason-->
        <taskdef name="checkstyle"
                 classname="com.puppycrawl.tools.checkstyle.CheckStyleTask"
                 classpathref="build.classpath" />
        <checkstyle config="${checkstyle.config}" classpathref="build.classpath" failOnViolation="false">
            <fileset dir="${src.dir}" />
        </checkstyle>
        <!--<java fork="yes" failonerror="yes" classname="com.puppycrawl.tools.checkstyle.Main"
              classpathref="build.classpath">
            <arg value="-p" />
            <arg value="${checkstyle.properties}" />
            <arg value="-r" />
            <arg value="${src.dir}" />
        </java>-->
    </target>

    <target name="package" depends="compile" description="Package fontbox">
        <property name="release.name" value="${project.name}-${project.version}" />
        <propertyfile file="${resources.dir}/fontbox.version">
            <entry  key="fontbox.version" value="${release.name}"/>
        </propertyfile>

        <jar jarfile="./lib/${release.name}.jar">
            <fileset dir="${dest.dir}">
                <include name="org/**/*.class"/>
            </fileset>
            <fileset dir=".">
                <include name="${resources.dir}/**/*" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="common">
                    <attribute name="Specification-Title" value="FontBox"/>
                    <attribute name="Specification-Version" value="${project.version}"/>
                    <attribute name="Specification-Vendor" value="FontBox.org"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="nightly-dist">
        <tstamp />
        <property name="release.name" value="${project.name}-${project.version}-${DSTAMP}" />
        <antcall target="dist" />
    </target>

    <target name="release-dist">
        <delete dir="${dist.dir}"/>
        <antcall target="dist" />
    </target>

    <target name="dist" depends="clean,package,javadoc,website,build.NET,checkstyle" description="Create zip distribution file">
        
        <zip zipfile="${dist.dir}/${release.name}.zip">
            <zipfileset dir="." prefix="${release.name}">
                <include name="${lib.dir}/*.jar"/>
                <include name="${licenses.dir}/**/*"/>
                <include name="${src.dir}/**/*.java"/>
                <include name="${src.dir}/**/*.html"/>
                <include name="${resources.dir}/**/*" />
                <include name="${bin.dir}/**/*" />
                <include name="build.xml" />
                <include name="build.properties.example" />
                <include name="${checkstyle.config}" />
            </zipfileset>
            <zipfileset dir="${website.build.dir}" prefix="${release.name}/docs">
                <include name="**/*" />
                <exclude name="**/*.zip" />
            </zipfileset>
            <zipfileset dir="." prefix="${release.name}">
                <include name="website/**/*" />
                <exclude name="website/build/**/*" />
            </zipfileset>
            <zipfileset dir="${ikvm.dir}/bin" prefix="${release.name}/bin" >
                <include name="*.dll" />
            </zipfileset>
        </zip>
    </target>
    
    <target name="checkForIKVM">
        <condition property="IKVMAvailable">
            <and>
            	<os family="windows"/>
                <available file="${ikvmc}" property="ignored" />
			</and>
        </condition>
    </target>
    
    <target name="build.NET" depends="checkForIKVM,package" if="IKVMAvailable" description="Build FontBox .NET DLL files">
        <property name="release.name" value="${project.name}-${project.version}" />
	    <exec executable="${ikvmc}">
            <arg value="-reference:${ikvm.dir}/bin/IKVM.GNU.Classpath.dll" />
            <arg value="-reference:${ikvm.dir}/bin/IKVM.AWT.WinForms.dll" />
            <arg value="-target:library" />
            <arg value="-out:bin\${release.name}.dll" />
            <arg value="lib\${release.name}.jar" />
	    </exec>
    </target>

    <target name="javadoc" depends="compile" description="Create Javadocs">
        <property name="release.name" value="${project.name}-${project.version}" />
        <javadoc packagenames="org.*"
               sourcepath="${src.dir}"
               destdir="${docs.dir}"
               author="true"
               version="true"
               use="true"
               windowtitle="${release.name} API"
               doctitle="${project.name}"
               verbose="no"
               classpathref="build.classpath" 
               encoding="ISO-8859-1"
               breakiterator="yes">
            <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
            <!--<link href="http://jakarta.apache.org/ant/manual/api/" />-->
        </javadoc>
    </target>

    <!-- FORREST_HOME must be set as an environment variable -->
    <property name="project.home" value="${basedir}/website" />
    <property name="forrest.jvmargs" value="-Djava.awt.headless=true" />
    
    <import file="${env.FORREST_HOME}/main/forrest.build.xml" optional="true"/>
    <target name="website" if="env.FORREST_HOME">
       <antcall target="site"/>
    </target>

</project>